name: CI

on:
  push:
    branches:
      - main
      - githubActions # Add your current branch
  pull_request:
    branches:
      - main # This means it will run on any PR targeting main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      # Setup Go for backend
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"
          cache: true
          cache-dependency-path: bugtracker-backend/go.sum

      # Setup Node.js for frontend
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: |
            bugtracker-frontend/package-lock.json
            tests/package-lock.json

      # Build backend
      - name: Build backend
        working-directory: ./bugtracker-backend
        run: |
          go mod download
          go build -v ./...

      # Run backend tests
      - name: Test backend
        working-directory: ./bugtracker-backend
        run: |
          set -o pipefail
          go test -v ./... 2>&1 | tee test-output.txt
          go test -v ./... -json > test-report.json
          exit ${PIPESTATUS[0]}

      # Upload test results
      - name: Upload test results
        if: always() # Run even if tests fail
        uses: actions/upload-artifact@v4
        with:
          name: backend-test-results
          path: |
            bugtracker-backend/test-report.json
            bugtracker-backend/test-output.txt
          retention-days: 7

      # Add test summary
      - name: Create test summary
        if: always()
        working-directory: ./bugtracker-backend
        run: |
          echo "## Backend Test Results" >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
          cat test-output.txt >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY

      # Build frontend
      - name: Build frontend
        working-directory: ./bugtracker-frontend
        run: |
          npm ci
          npm run build
