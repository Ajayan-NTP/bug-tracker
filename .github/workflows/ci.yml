name: CI

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  unit-tests-backend:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"
          cache-dependency-path: bugtracker-backend/go.sum
      - name: install go-junit-report
        run: go install github.com/jstemmer/go-junit-report@latest    

      - name: Execute Backend Unit Tests
        working-directory: ./bugtracker-backend
        run: |
          go test -json coverprofile=coverage.out = covermode=atomic ./... 
          go tool cover -func=coverage.out > coverage.txt

          echo "## GO Test Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
          cat coverage.txt >> $GITHUB_STEP_SUMMARY  
          echo "```" >> $GITHUB_STEP_SUMMARY
          go test -v ./... 2>&1 | go-junit-report > test-results.xml

      - name: Publish Backend test results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Backend-test-results
          path: bugtracker-backend/test-results.xml
          reporter: java-junit

  unit-tests-frontend:
    needs: unit-tests-backend
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: bugtracker-frontend/package-lock.json

      - name: Execute Frontend Unit Tests
        working-directory: ./bugtracker-frontend
        run: |
          npm ci
          npm test | tee test-output.txt

          echo "## Frontend Test Coverage Report" >> $GITHUB_STEP_SUMMARY
          echo "```" >> $GITHUB_STEP_SUMMARY
          cat test-output.txt >> $GITHUB_STEP_SUMMARY  
          echo "```" >> $GITHUB_STEP_SUMMARY


      - name: Publish frontend test results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: frontend-test-results
          path: bugtracker-frontend/test-results.xml
          reporter: jest-junit

  Api-E2E-Performance-tests:
    needs: [unit-tests-frontend, unit-tests-backend]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

     
      - name: Start Application
        run: |
         docker compose up --build -d
        

      - name: Execute API Tests
        working-directory: ./tests-api
        run: |
          npm ci
          npx playwright test 
      
      - name: Execute E2E Tests
        working-directory: ./tests-e2e
        run: |
          npm ci
          npx playwright install
          npx playwright test 

      - name: setUp K6
        uses: grafana/setup-k6-action@v1
       
      - name: Execute K6 Tests
        uses: grafana/run-k6-action@v1
       
        with:
          path: ./tests-perf/script.js
          flags: --out json=summary.json
      - name: stop application
        run: |
          docker compose down 
      
    



      - name: upload API test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-test-results
          
          path: tests-api/test-results/
          retention-days: 30
      
      - name: upload API-playwright test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: api-test-Playwright-results
          path: tests-api/playwright-report/
          retention-days: 30

      - name: upload E2E test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: E2E-test-results
          path: tests-e2e/test-results/
          retention-days: 30
      
      - name: upload E2E-playwright test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: E2E-test-Playwright-results
          path: tests-e2e/playwright-report/
          retention-days: 30   

          
      - name: upload Performance test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Performance-test-results
          path: ./tests-perf/summary.json
          retention-days: 30
      
      - name: upload Performance-K6 test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Performance-test-K6-results
          path: ./tests-perf/perf-results.html
          retention-days: 30   
      
      


      
      - name: Publish API test results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: api-test-results    
          path: tests-api/test-results/*.xml
          reporter: jest-junit   

      - name: Publish E2E test results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: E2E-test-results
          path: tests-e2e/test-results/*.xml
          reporter: jest-junit
