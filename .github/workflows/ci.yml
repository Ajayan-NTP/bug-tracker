name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      # Backend tests
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"
          cache: true
          cache-dependency-path: bugtracker-backend/go.sum

      - name: Test backend
        working-directory: ./bugtracker-backend
        run: |
          go test -json -coverprofile=coverage.out -covermode=atomic ./... > test-results.json
          go tool cover -func=coverage.out > coverage.txt

      - name: Generate backend test report
        uses: guyarb/golang-test-annotations@v0.7.0
        if: always()
        with:
          test-results: bugtracker-backend/test-results.json
          package-name: bugtracker-backend

      # Frontend tests
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: bugtracker-frontend/package-lock.json

      - name: Test frontend
        working-directory: ./bugtracker-frontend
        run: npm ci && npm test

      - name: Publish frontend test results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Frontend Tests
          path: bugtracker-frontend/test-results.xml
          reporter: jest-junit

  integration-tests:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4

      # Use GitHub's Docker Compose setup action
      - name: Set up Docker Compose
        uses: ndeloof/install-compose-action@v0.0.1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Run tests with proper error handling
      - name: Run integration tests
        run: |
          docker-compose up --build --abort-on-container-exit tests || true
          EXIT_CODE=$(docker-compose ps -q tests | xargs docker inspect -f '{{ .State.ExitCode }}')
          docker-compose down
          if [ "$EXIT_CODE" != "0" ]; then
            exit $EXIT_CODE
          fi

      - name: Upload Playwright report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: playwright-report
          path: ./tests/playwright-report/
          retention-days: 30

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: ./tests/test-results.xml
          retention-days: 30

      - name: Publish test results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Integration Tests
          path: ./tests/test-results.xml
          reporter: jest-junit
