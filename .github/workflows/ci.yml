name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4

      # Setup Go for backend
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "1.21"
          cache: true
          cache-dependency-path: bugtracker-backend/go.sum

      # Setup Node.js for frontend
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "20"
          cache: "npm"
          cache-dependency-path: |
            bugtracker-frontend/package-lock.json
            tests/package-lock.json

      # Build backend
      - name: Build backend
        working-directory: ./bugtracker-backend
        run: |
          go mod download
          go build -v ./...

      # Cache Go build artifacts
      - name: Cache Go build
        uses: actions/cache/save@v3
        with:
          path: |
            bugtracker-backend/go.sum
            bugtracker-backend/go.mod
            bugtracker-backend/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('bugtracker-backend/go.sum') }}

      # Build frontend
      - name: Build frontend
        working-directory: ./bugtracker-frontend
        run: |
          npm ci
          npm run build

      # Cache npm dependencies
      - name: Cache npm dependencies
        uses: actions/cache/save@v3
        with:
          path: |
            bugtracker-frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('bugtracker-frontend/package-lock.json') }}

  test:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: read
      checks: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4

      # Restore Go cache
      - name: Restore Go cache
        uses: actions/cache/restore@v3
        with:
          path: |
            bugtracker-backend/go.sum
            bugtracker-backend/go.mod
            bugtracker-backend/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('bugtracker-backend/go.sum') }}

      # Restore npm cache
      - name: Restore npm cache
        uses: actions/cache/restore@v3
        with:
          path: |
            bugtracker-frontend/node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('bugtracker-frontend/package-lock.json') }}

      # Run backend tests
      - name: Test backend
        working-directory: ./bugtracker-backend
        run: |
          go test -json -coverprofile=coverage.out -covermode=atomic ./... > test-results.json
          go tool cover -func=coverage.out > coverage.txt
          echo "## Go Test Coverage" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          cat coverage.txt >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      # Generate backend test report
      - name: Generate backend test report
        uses: guyarb/golang-test-annotations@v0.7.0
        if: always()
        with:
          test-results: bugtracker-backend/test-results.json
          package-name: bugtracker-backend

      # Run frontend tests
      - name: Test frontend
        working-directory: ./bugtracker-frontend
        run: |
          npm test
        env:
          CI: true

      # Publish frontend test results
      - name: Publish frontend test results
        uses: dorny/test-reporter@v1
        if: always()
        with:
          name: Frontend Tests
          path: bugtracker-frontend/test-results.xml
          reporter: jest-junit
          fail-on-error: false
